def linearize(v: float) -> float:
    return ((v + 0.055) / 1.055) ** 2.4 if v > 0.04045 else v / 12.92


def linearize_fast(v: float) -> float:
    v1 = v - 0.5
    v2 = v1 * v1
    v3 = v2 * v1
    v4 = v2 * v2

    return (
        -0.248750514614486
        + 0.925583310193438 * v
        + 1.16740237321695 * v2
        + 0.280457026598666 * v3
        - 0.0757991963780179 * v4
    )


def delinearize(v: float) -> float:
    return 1.055 * (v ** (1.0 / 2.4)) - 0.055 if v > 0.0031308 else 12.92 * v


def delinearize_fast(v: float) -> float:
    if v > 0.2:
        v1 = v - 0.6
        v2 = v1 * v1
        v3 = v2 * v1
        v4 = v2 * v2
        v5 = v3 * v2
        return (
            0.442430344268235
            + 0.592178981271708 * v
            - 0.287864782562636 * v2
            + 0.253214392068985 * v3
            - 0.272557158129811 * v4
            + 0.325554383321718 * v5
        )
    elif v > 0.03:
        v1 = v - 0.115
        v2 = v1 * v1
        v3 = v2 * v1
        v4 = v2 * v2
        v5 = v3 * v2
        return (
            0.194915592891669
            + 1.55227076330229 * v
            - 3.93691860257828 * v2
            + 18.0679839248761 * v3
            - 101.468750302746 * v4
            + 632.341487393927 * v5
        )
    else:
        v1 = v - 0.015
        v2 = v1 * v1
        v3 = v2 * v1
        v4 = v2 * v2
        v5 = v3 * v2
        return (
            0.0519565234928877
            + 5.09316778537561 * v
            - 99.0338180489702 * v2
            + 3484.52322764895 * v3
            - 150028.083412663 * v4
            + 7168008.42971613 * v5
        )
